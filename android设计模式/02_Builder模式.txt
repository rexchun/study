/**
 * 优点：良好的封装性，建造者独立，容易扩展
 * 缺点：会产生多余的Builder对象，消耗内存
 */

public class Computer {
    private String mBoard;//主机
    private String mDisplay;//显示器
    private String mOS;//操作系统

    public String getmBoard() {
        return mBoard;
    }

    public void setmBoard(String mBoard) {
        this.mBoard = mBoard;
    }

    public String getmDisplay() {
        return mDisplay;
    }

    public void setmDisplay(String mDisplay) {
        this.mDisplay = mDisplay;
    }

    public String getmOS() {
        return mOS;
    }

    public void setmOS(String mOS) {
        this.mOS = mOS;
    }

    @Override
    public String toString() {
        return "Computer{" +
                "mBoard='" + mBoard + '\'' +
                ", mDisplay='" + mDisplay + '\'' +
                ", mOS='" + mOS + '\'' +
                '}';
    }
}

/**
 * Created by Administrator on 2017/7/12.
 */
public class Builder {
    private String mBoard;
    private String mDisplay;
    private String mOS;

    public Builder setBoard(String board) {
        this.mBoard = board;
        return this;
    }

    public Builder setDisplay(String display) {
        this.mDisplay = display;
        return this;
    }

    public Builder setOS(String os) {
        this.mOS = os;
        return this;
    }

    public void create() {
        Computer mComputer = new Computer();
        mComputer.setmBoard(mBoard);
        mComputer.setmDisplay(mDisplay);
        mComputer.setmOS(mOS);
        Log.e("toString", "toString:" + mComputer.toString());
    }
}